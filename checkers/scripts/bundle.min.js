function subscribeToBoard(n){n.onSet((n,t)=>{$("#"+t).addClass(n.colorClass).addClass(n.kindClass)});n.onDelete((n,t)=>{$("#"+t).removeClass(n.colorClass).removeClass(n.kindClass)})}function unsubscribeToBoard(n){n.offSet((n,t)=>{$("#"+t).addClass(n.colorClass).addClass(n.kindClass)});n.offDelete((n,t)=>{$("#"+t).removeClass(n.colorClass).removeClass(n.kindClass)})}function subscribeToGame(n){n.onTurn(showTurn)}function unsubscribeToGame(n){n.offTurn(showTurn)}function showTurn(n){n?$("#controls").removeClass("dark").addClass("light"):$("#controls").removeClass("light").addClass("dark")}function markupBoard(n){var t=$('<div class="last-row"/>').appendTo(n),i;for(appendLetterRow(t),i=8;i>0;i--)t=$('<div class="row"/>').appendTo(n),appendCellRow(t,i);t=$('<div class="zero-row"/>').appendTo(n);appendLetterRow(t)}function appendLetterRow(n){$('<div class="corner">&nbsp;<\/div>').appendTo(n);for(var t=97;t<105;t++)$('<div class="letter" />').appendTo(n).text(String.fromCharCode(t));$('<div class="corner">&nbsp;<\/div>').appendTo(n)}function appendCellRow(n,t){var i,r;for($('<div class="digit" />').appendTo(n).text(t),i=97;i<105;i++)r=String.fromCharCode(i)+t,$("<div />",{id:r,title:r,"class":"cell"}).appendTo(n);$('<div class="digit" />').appendTo(n).text(t)}class Cell{constructor(n,t){this.row=n;this.column=t}get cellId(){return String.fromCharCode(97+this.column)+String.fromCharCode(49+this.row)}static fromId(n){return new Cell(n.charCodeAt(1)-49,n.charCodeAt(0)-97)}}class Piece{constructor(n,t,i,r){this.kind=n;this.white=t;this.row=i;this.column=r}get colorClass(){return this.white?"white":"black"}get kindClass(){return null}canMove(){return!1}findCapture(){return null}canCapture(){return!1}isSelectableForJump(){return!1}isSelectableToMove(){return!1}move(n,t){return this.row=t.row,this.column=t.column,this}}class Man extends Piece{constructor(n,t,i){super(1,n,t,i)}get kindClass(){return"man"}canMove(n){return n.row-this.row==(this.white?1:-1)&&Math.abs(n.column-this.column)==1}findCapture(n,t){if(Math.abs(t.row-this.row)==2&&Math.abs(t.column-this.column)==2){var u=(t.row+this.row)/2,f=(t.column+this.column)/2,e=new Cell(u,f),i=e.cellId,r=n.getPiece(i);if(r!=null&&this.canCapture(r))return i}return null}canCapture(n){return this.white!=n.white&&Math.abs(n.row-this.row)==1&&Math.abs(n.column-this.column)==1}isSelectableForJump(n){var t;return this.row>1&&(this.column>1&&(t=n.getCellPiece(this.row-1,this.column-1),t!=null&&this.canCapture(t)&&n.getCellPiece(this.row-2,this.column-2)==null)||this.column<n.size-2&&(t=n.getCellPiece(this.row-1,this.column+1),t!=null&&this.canCapture(t)&&n.getCellPiece(this.row-2,this.column+2)==null))?!0:this.row<n.size-2&&(this.column>1&&(t=n.getCellPiece(this.row+1,this.column-1),t!=null&&this.canCapture(t)&&n.getCellPiece(this.row+2,this.column-2)==null)||this.column<n.size-2&&(t=n.getCellPiece(this.row+1,this.column+1),t!=null&&this.canCapture(t)&&n.getCellPiece(this.row+2,this.column+2)==null))?!0:!1}isSelectableToMove(n){if(this.white){if(this.row<n.size-1&&(this.column>0&&n.getCellPiece(this.row+1,this.column-1)==null||this.column<n.size-1&&n.getCellPiece(this.row+1,this.column+1)==null))return!0}else if(this.row>0&&(this.column>0&&n.getCellPiece(this.row-1,this.column-1)==null||this.column<n.size-1&&n.getCellPiece(this.row-1,this.column+1)==null))return!0;return!1}move(n,t){return t.row==(this.white?n.size-1:0)?new King(this.white,t.row,t.column):super.move(n,t)}}class King extends Piece{constructor(n,t,i){super(2,n,t,i)}get kindClass(){return"king"}canMove(n){return Math.abs(n.row-this.row)==Math.abs(n.column-this.column)}findCapture(n,t){var u=t.row-this.row,s=t.column-this.column,f,r,i,e,o;if(Math.abs(u)==Math.abs(s))for(f=Math.abs(u),r=new Cell(this.row,this.column),i=1;i<f;i++)if(r.row=this.row+(u>0?i:-i),r.column=this.column+(s>0?i:-i),e=r.cellId,o=n.getPiece(e),o!=null){if(i+1==f&&this.canCapture(o))return e;break}return null}canCapture(n){return this.white!=n.white&&Math.abs(n.row-this.row)==Math.abs(n.column-this.column)}isSelectableForJump(n){var r,t,i;if(this.row>1){if(this.column>1)for(r=Math.min(this.row,this.column)-1,t=1;t<r;t++)if(i=n.getCellPiece(this.row-t,this.column-t),i!=null){if(this.canCapture(i)&&n.getCellPiece(this.row-t-1,this.column-t-1)==null)return!0;break}if(this.column<n.size-2)for(r=Math.min(this.row,n.size-this.column-1)-1,t=1;t<r;t++)if(i=n.getCellPiece(this.row-t,this.column+t),i!=null){if(this.canCapture(i)&&n.getCellPiece(this.row-t-1,this.column+t+1)==null)return!0;break}}if(this.row<n.size-2){if(this.column>1)for(r=Math.min(n.size-this.row-1,this.column)-1,t=1;t<r;t++)if(i=n.getCellPiece(this.row+t,this.column-t),i!=null){if(this.canCapture(i)&&n.getCellPiece(this.row+t+1,this.column-t-1)==null)return!0;break}if(this.column<n.size-2)for(r=Math.min(n.size-this.row-1,n.size-this.column-1)-1,t=1;t<r;t++)if(i=n.getCellPiece(this.row+t,this.column+t),i!=null){if(this.canCapture(i)&&n.getCellPiece(this.row+t+1,this.column+t+1)==null)return!0;break}}return!1}isSelectableToMove(n){return this.row<n.size-1&&(this.column>0&&n.getCellPiece(this.row+1,this.column-1)==null||this.column<n.size-1&&n.getCellPiece(this.row+1,this.column+1)==null)?!0:this.row>0&&(this.column>0&&n.getCellPiece(this.row-1,this.column-1)==null||this.column<n.size-1&&n.getCellPiece(this.row-1,this.column+1)==null)?!0:!1}}class Board{constructor(n=8){this.size=n;this.position=new Map;this._onSet=new Set;this._onDelete=new Set}onSet(n){return this._onSet.add(n),this}offSet(n){return this._onSet.delete(n),this}onDelete(n){return this._onDelete.add(n),this}offDelete(n){return this._onDelete.delete(n),this}getCellPiece(n,t){var i=new Cell(n,t);return this.getPiece(i.cellId)}findSelectableForJump(n){var t=[];return this.position.forEach((i,r)=>{i.white==n&&i.isSelectableForJump(this)&&t.push(r)}),t}countPieces(n){var t=0;return this.position.forEach(i=>{i.white==n&&t++}),t}clear(){this.position.clear()}getPiece(n){return this.position.get(n)}setPiece(n,t){var i=this.position.get(n);return this.position.set(n,t),this._onSet.forEach(i=>i(t,n)),i}deletePiece(n){var t=this.position.get(n);return t!=null&&(this.position.delete(n),this._onDelete.forEach(i=>i(t,n))),t}toJSON(){return Array.from(this.position.values())}}class Game{constructor(n){this.id=Math.floor(Math.random()*1e4);this.finished=!1;this.result=0;this.whiteTurn=!0;this.selected=null;this.selectableForJump=null;this.board=n;this._onTurn=new Set}onTurn(n){return this._onTurn.add(n),this}offTurn(n){return this._onTurn.delete(n),this}toggleTurn(){this.whiteTurn=!this.whiteTurn;this._onTurn.forEach(n=>n(this.whiteTurn))}prepare(){this.selectableForJump==null&&(this.selectableForJump=this.board.findSelectableForJump(this.whiteTurn))}tryToJump(n,t){var r=Cell.fromId(t),u=n.findCapture(this.board,r),i;return u!=null?(this.board.deletePiece(u),this.board.deletePiece(this.selected),i=n.move(this.board,r),this.board.setPiece(t,i),i.isSelectableForJump(this.board)?this.selected=t:(this.selected=null,this.selectableForJump=null,this.toggleTurn(),this.board.countPieces(this.whiteTurn)==0&&(this.finished=!0,this.result=this.whiteTurn?-1:1)),!0):!1}tryToMove(n,t){var i=Cell.fromId(t);return n.canMove(i)?(this.board.deletePiece(this.selected),this.board.setPiece(t,n.move(this.board,i)),this.selected=null,this.selectableForJump=null,this.toggleTurn(),!0):!1}load(n){this.id=n.id;this.finished=n.finished;this.result=n.result;this.whiteTurn=n.whiteTurn;this.selected=n.selected;this.selectableForJump=n.selectableForJump}}class RussianCheckers{constructor(n=3){this.initRows=n}createBoard(){return new Board}setupBoard(n){for(var t,r=new Cell(0,0),i=0;i<this.initRows;i++)for(r.row=i,t=0;t<n.size;t++)(i+t&1)==0&&(r.column=t,n.setPiece(r.cellId,new Man(!0,i,t)));for(i=n.size-this.initRows;i<n.size;i++)for(r.row=i,t=0;t<n.size;t++)(i+t&1)==0&&(r.column=t,n.setPiece(r.cellId,new Man(!1,i,t)))}loadBoard(n,t=[]){var i=null,r=new Cell(0,0);t.forEach(t=>{switch(t.kind){case 1:i=new Man(t.white,t.row,t.column);break;case 2:i=new King(t.white,t.row,t.column)}i!=null&&(r.row=t.row,r.column=t.column,n.setPiece(r.cellId,i))})}createGame(n){return new Game(n)}}$(function(){var i,t,n;markupBoard($("#board"));i=new RussianCheckers;t=i.createBoard();subscribeToBoard(t);i.setupBoard(t);n=i.createGame(t);subscribeToGame(n);$(".cell").click(function(){var r,i,u;n.finished?alert(`Game over: ${n.result>0?"light":"dark"} won`):(r=n.selected,r==null?(n.prepare(),i=t.getPiece(this.id),i==null?alert("You have to select a piece"):i.white!=n.whiteTurn?alert(`You have to select a ${n.whiteTurn?"light":"dark"} piece`):n.selectableForJump.length>0?n.selectableForJump.indexOf(this.id)>=0?(n.selected=this.id,$(this).addClass("selected")):alert("You have to select another piece to jump: "+n.selectableForJump):i.isSelectableToMove(t)?(n.selected=this.id,$(this).addClass("selected")):alert("You have to select another piece to move")):(i=t.getPiece(r),i==null?alert("Piece is not selected"):(u=t.getPiece(this.id),u==null?i.isSelectableForJump(t)?n.tryToJump(i,this.id)?($("#"+r).removeClass("selected"),n.selected!=null?$(this).addClass("selected"):n.finished&&alert(`Game over: ${n.result>0?"light":"dark"} won`)):alert("You can not jump to this cell on the board"):n.tryToMove(i,this.id)?($("#"+r).removeClass("selected"),n.selected!=null&&$(this).addClass("selected")):alert("You can not move to this cell on the board"):alert("You have to move to unoccupied square on the board"))))});$("#new").click(function(){$(".cell").removeClass("white black").removeClass("man king").removeClass("selected");t.clear();i.setupBoard(t);n=i.createGame(t)});$("#save").click(function(){localStorage.setItem("checkers",JSON.stringify(n))});$("#load").click(function(){var r=JSON.parse(localStorage.getItem("checkers"));r!=null&&($(".cell").removeClass("white black").removeClass("man king").removeClass("selected"),t.clear(),i.loadBoard(t,r.board),n=i.createGame(t),n.load(r),showTurn(n.whiteTurn))})});